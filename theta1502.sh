#!/bin/bash
#SBATCH --cpus-per-task=8
#SBATCH --mem-per-cpu=20G      
#SBATCH --time=1-05:00:00
#SBATCH --output=%N-%j.out
#SBATCH --account=def-liyue
#SBATCH --mail-user=ziqi.yang2@mail.mcgill.ca
#SBATCH --mail-type=FAIL,END
#SBATCH --gpus-per-node=1
echo "Job started at: `date`"

echo "Job ID: $SLURM_JOBID"
module load python
#virtualenv --no-download $SLURM_TMPDIR/env
source ../projects/def-liyue/zyq1213/train_test/bin/activate
module load python
#module load tqdm
#source /home/zyq1213/projects/def-liyue/zyq1213//bin/activate
pip install torch torchvision --no-index
#declare -a morethanthousand
#echo "starting reading and training"
#python extract_phi.py
#python coherence_plot.py
#python clustering_plotting.py
#long_format_df.to_csv("long_format_cadd.csv", index=False)
#python main.py
#python get_token_counts.py
#echo "produce corpus"
#python corpus.py
#echo "go to guide_prior"
#cd guide_prior
#echo "get document phecode"
#python get_doc_phecode.py
#echo "get prior"
#python get_prior_GMM.py
#echo "get initial stats"
#echo "get token counts"
#python get_token_counts.py
#echo "run main code"
#cd ..
python main.py
#for i in `seq 0 1502`     
#do
#	python training_testing_preprocess.py 318
#done
#python read_theta_density_new.py
#python theta_1502.py
#python find_significant_phecode.py
#python data_extract.py
